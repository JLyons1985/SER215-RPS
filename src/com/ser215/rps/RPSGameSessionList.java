/***********************************************************************
 * App Name: Rock, Paper, Scissors
 * Class Name: RPSGameSessionList
 * Class Description: Form used to display game sessions.
 * Author(s): Joshua Lyons
 **********************************************************************/

package com.ser215.rps;

import javax.swing.JPanel;
import javax.swing.JButton;

// Main class
public class RPSGameSessionList extends javax.swing.JDialog {
    
    // Variables
    private RPSClientApplication rpsMain;               // Holds the main form reference
    
    // Constructor
    public RPSGameSessionList(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        rpsMain = (RPSClientApplication) parent;
        rpsMain.sendMessageToServer("Action", "RequestGames");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamesListSL = new javax.swing.JScrollPane();
        gamesListPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        createGameSession = new javax.swing.JButton();
        closeSessionList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        gamesListPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 5));
        gamesListSL.setViewportView(gamesListPanel);

        jLabel1.setText("Game Sessions");

        createGameSession.setText("Create Game Session");
        createGameSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createGameSessionActionPerformed(evt);
            }
        });

        closeSessionList.setText("Close Session List");
        closeSessionList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeSessionListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(createGameSession)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeSessionList)
                .addGap(98, 98, 98))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(gamesListSL, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gamesListSL, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createGameSession)
                    .addComponent(closeSessionList))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Close dialog
    private void closeSessionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeSessionListActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeSessionListActionPerformed

    // Tell master server to create new game session
    private void createGameSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createGameSessionActionPerformed
        
        // See if creating a game session is successful
        if (rpsMain.createGameSession()) {
            rpsMain.sendMessageToServer("Action", "RequestGames");
        }
    }//GEN-LAST:event_createGameSessionActionPerformed

    // Game server button clicked
    private void gameSessionActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        
        // First find the port from the button
        int tmpPort = Integer.parseInt(((JButton)evt.getSource()).getText().split("-")[1]);
        
        rpsMain.joinGameSession(tmpPort);
        
        // change game session text
        rpsMain.changeGameSessionText("Leave Game Session");
        
        // now close the window
        this.dispose();
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPSGameSessionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPSGameSessionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPSGameSessionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPSGameSessionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RPSGameSessionList dialog = new RPSGameSessionList(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Methods
    
    // Refreshes the list of game servers
    public void refreshList(String[] games){
        
        // First clear the list
        this.gamesListPanel.removeAll();
        
        // Add buttons
        for (int i = 0; i < games.length; i++){
            
            // Create the panel
            JPanel tmpPanel = new JPanel();
            tmpPanel.setPreferredSize(new java.awt.Dimension(this.gamesListSL.getWidth() - 5, 50));
            tmpPanel.setLayout(new java.awt.GridLayout());
            
            // Create the button
            JButton tmpButton = new JButton(games[i]);
            tmpButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    gameSessionActionPerformed(evt);
                }
                });
            
            tmpPanel.add(tmpButton);
            
            // Add all to the list
            this.gamesListPanel.add(tmpPanel);  
            
            this.gamesListPanel.getComponent(i).setPreferredSize(new java.awt.Dimension(this.gamesListSL.getWidth() - 5, 50));
            
        }
        
        this.gamesListSL.updateUI();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeSessionList;
    private javax.swing.JButton createGameSession;
    private javax.swing.JPanel gamesListPanel;
    private javax.swing.JScrollPane gamesListSL;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
